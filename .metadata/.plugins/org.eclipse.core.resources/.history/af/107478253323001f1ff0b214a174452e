package Job_application.UserService.UserController;
import java.util.Map;
import java.util.UUID;
import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.annotation.JsonValue;

import Job_application.UserService.Service.UserService;
import Job_application.UserService.UserDto.UserDto;
import Job_application.UserService.UserDto.UserResumeDto;
import Job_application.UserService.UserRepository.UserRepository;

@RestController
@RequestMapping("/users")
public class UserController {
	
	@Autowired
	private UserRepository userRepository;
	@Autowired
	private UserService userService;

    @GetMapping("/test")
    public String testEndpoint() {
    	System.out.println("ppppppppppppppppp");
        return "Test endpoint reached!";
    }
    
//    @PostMapping("/save")
//    public String saveUser(@RequestParam("email") String email,
//    		@RequestParam("password") String password,
//    		@RequestParam("name") String name,
//    		@RequestParam("Mobilenumber") long Mobilenumber,
//    		@RequestParam("skills")List<String> skills ,
//    		@RequestParam("file") MultipartFile file
//    		) throws IOException {
//         userService.saveUser(email,password,name,Mobilenumber,skills,file);
//        return "Successfully uploaded";
//    }
    @PostMapping("/register")
    public ResponseEntity<UserDto> Register(@RequestBody UserDto userDto) {
    	UserDto data = userService.saveUser(userDto);
		return new ResponseEntity<>(data,HttpStatus.OK);
    	
    }
    
  @PostMapping("/login")
  public ResponseEntity<String> Login(@RequestBody Map<String,String> loginData) {
	 String data = userService.loginuser(loginData.get("email"),loginData.get("password"));
	 return new ResponseEntity<>(data,HttpStatus.OK);
	  
  }
  
  @PostMapping("/upload_user_data")
  public UUID uploadUserDetails(@RequestBody UUID id) throws Exception {
	  System.out.println(id);
      return id;
  }

  
  
    
}
